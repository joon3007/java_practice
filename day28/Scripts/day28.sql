/*
 * Flower 테이블 생성하기
 * 컬럼명 : id, name, age, color
 * id는 pk
 * flower에서 flower2로 변경
 * insert로 값넣기
 * flower2 테이블값 삭제(truncate)
 * flower2 테이블 전체 삭제
 * 
 */
CREATE TABLE FLOWER(
	ID VARCHAR2(10),
	NAME VARCHAR2(20),
	AGE NUMBER(2),
	COLOR VARCHAR2(10),
	CONSTRAINT FLOWER_PK PRIMARY KEY(ID)
);

INSERT INTO FLOWER (ID, NAME, AGE, COLOR) VALUES('3333','장미',1,'빨강');
DROP TABLE FLOWER;
-----------------------------------------------------------------------
--시퀀스(SEQUENCE)
--유일한 값을 생성해 주는 오라클 객체(자동 증가 컬럼)

CREATE SEQUENCE USER_SEQ
INCREMENT BY 1
START WITH 1
MINVALUE 1
MAXVALUE 1000;

--DROP SEQUENCE USER_SEQ

CREATE TABLE "USER"(
	USER_NUMBER NUMBER NOT NULL,
	ID VARCHAR2(20),
	PW VARCHAR2(20),
	NAME VARCHAR2(20),
	PHONE_NUMBER VARCHAR2(11),
	CONSTRAINT USER_PK PRIMARY KEY(ID)
);

SELECT * FROM "USER";

INSERT INTO HR."USER"
(USER_NUMBER, ID, PW, NAME, PHONE_NUMBER)
VALUES(USER_SEQ.NEXTVAL, 'DKDK', '1234', '김휘준', '01041418105');

------------------------------------------
/*
 * PK
 * 	CONSTRINT 제약조건이름 PRIMARY KEY(컬럼명)
 * 
 * 	ALTER TABLE 테이블 명 ADD CONSTRINT 제약조건이름 PRIMARY KEY(컬럼명)
 * 
 * FK
 * 	CONSTRAINT 제약조건이름 FOREIGN KEY(컬럼명) REFERENCES 부모테이블명(부모PK컬럼명)
 * 	
 * 	ARTER TABLE 테이블명 ADD
 * 	CONSTRAINT 제약조건이름 FOREIGN KEY(컬럼명) REFERENCES 부모테이블명(부모PK컬럼명)
 * 
 * 값 추가
 * 	부모테이블 먼저 그 다음 자식테이블
 * 
 * 값 삭제
 * 	자식테이블 먼저 그 다음 부모테이블
 * 
 * 	테이블에서 관계를 맺으면 ERD에서 확인해볼 수 있다.
 * 
 */


/*
 * 주인 / 애완견
 * OWNER -> PET
 * ID(PK) VARCHAR2   DOG_ID(PK)VARCHAR2
 * NAME VC2(20)		 NAME VC2(20)
 * AGE NUMBER(3)	 ID(FK) VC2(20)
 * ADDRESS VC2(30) 	 AGE NUMBER(2)
 * GENDER CHAR(1) 	 FEED VC2(20)
 * 					 DISEASE VC2(30)
 */

CREATE TABLE OWNER(
	ID VARCHAR2(20) NOT NULL,
	NAME VARCHAR2(20),
	AGE NUMBER(3),
	ADDRESS VARCHAR2(30),
	GENDER CHAR(1),
	CONSTRAINT OWNER_PK PRIMARY KEY(ID)
);

CREATE TABLE PET(
	DOG_ID VARCHAR2(20) NOT NULL,
	NAME VARCHAR2(20),
	OWNER_ID VARCHAR2(20),
	AGE NUMBER(2),
	FEED VARCHAR2(20),
	DISEASE VARCHAR2(20),
	CONSTRAINT PET_PK PRIMARY KEY(DOG_ID),
	CONSTRAINT PET_FK FOREIGN KEY(OWNER_ID) REFERENCES OWNER(ID)
);

CREATE SEQUENCE ID_INC
INCREMENT BY 1
START WITH 1
MINVALUE 1
MAXVALUE 1000;

CREATE SEQUENCE PET_ID_INC
INCREMENT BY 1
START WITH 1
MINVALUE 1
MAXVALUE 1000;

INSERT INTO HR.OWNER
(ID, NAME, AGE, ADDRESS, GENDER)
VALUES(ID_INC.NEXTVAL, '김휘준', 29, '한국', 'M');

INSERT INTO HR.OWNER
(ID, NAME, AGE, ADDRESS, GENDER)
VALUES(ID_INC.NEXTVAL, '김휘준2', 29, '한국', 'M');

SELECT * FROM OWNER;


INSERT INTO HR.PET
(DOG_ID, NAME, OWNER_ID, AGE, FEED, DISEASE)
VALUES(PET_ID_INC.NEXTVAL, '바둑이', 3, 2, '개밥', '건강함');

SELECT * FROM PET;

DROP TABLE PET;
DROP TABLE OWNER;

SELECT * FROM EMPLOYEES;


----------------------------------
-- 꽃과 화분
CREATE TABLE FLOWER(
	NAME VARCHAR2(20),
	COLOR VARCHAR2(10),
	PRICE NUMBER(6),
	CONSTRAINT FLOWER_PK PRIMARY KEY(NAME)
);

CREATE TABLE POT(
	ID VARCHAR2(20),
	COLOR VARCHAR2(20),
	NAME VARCHAR(20),
	SHAPE VARCHAR2(20),
	CONSTRAINT POT_PK PRIMARY KEY(ID),
	CONSTRAINT POT_FK FOREIGN KEY(NAME) REFERENCES FLOWER(NAME)
);

INSERT INTO HR.FLOWER
(NAME, COLOR, PRICE)
VALUES('장미', '빨간색', 5000);
INSERT INTO HR.FLOWER
(NAME, COLOR, PRICE)
VALUES('해바라기', '노란색', 7000);
INSERT INTO HR.FLOWER
(NAME, COLOR, PRICE)
VALUES('나팔꽃', '보라색', 3000);

SELECT * FROM FLOWER;

INSERT INTO HR.POT
(ID, COLOR, NAME, SHAPE)
VALUES('22111', '검은색', '해바라기', '정육면체');
INSERT INTO HR.POT
(ID, COLOR, NAME, SHAPE)
VALUES('22133', '갈색', '나팔꽃', '직육면체');
INSERT INTO HR.POT
(ID, COLOR, NAME, SHAPE)
VALUES('22424', '빨간색', '장미', '원형');

SELECT * FROM POT;

UPDATE POT
SET NAME = '해바라기'
WHERE NAME = '나팔꽃';

DELETE FROM POT
WHERE NAME != '장미';

--TRUNCATE TABLE POT; 롤백안됨 -> 사직
DROP TABLE POT;
DROP TABLE FLOWER;

--------------------------------------------
--제약조건
CREATE TABLE PERSON(
	ID VARCHAR2(20) PRIMARY KEY NOT NULL,
	NAME VARCHAR2(20),
	AGE NUMBER(3),
	GENDER CHAR(1) DEFAULT 'M' NOT NULL, CONSTRAINT CHECK_CHAR
	CHECK(GENDER IN ('M','W'))
);

INSERT INTO PERSON
(ID, NAME, AGE)
VALUES('001', '김휘준', 29);

INSERT INTO PERSON
(ID, NAME, AGE, GENDER)
VALUES('002', '고다은', 29,'W');

SELECT * FROM PERSON;

--------------------------------------------------------
--실습
SELECT * FROM PLAYER;

--PLAYER 테이블에서 TEAM_ID가 'K01'인 선수 검색
SELECT * FROM PLAYER WHERE TEAM_ID ='K01';
--PLAYER 테이블에서  TEAM_ID가 'K01'가아닌 선수 검색
SELECT * FROM PLAYER WHERE TEAM_ID !='K01';
--PLAYER 테이블에서 WEIGHT가 70이상이고 80이하인 선수 검색
SELECT * FROM PLAYER WHERE WEIGHT >=70 AND WEIGHT <=80;
--PLAYER 테이블에서 TEAM_ID가 'K03'이고 HEIGHT가 180미만인 선수 검색
SELECT * FROM PLAYER WHERE TEAM_ID = 'K03' AND HEIGHT < 180;
--PLAYER 테이블에서 TEAM_ID가 'K06'이고 NICKNAME이 '제리'인 선수 검색
SELECT * FROM PLAYER WHERE TEAM_ID = 'K06' AND NICKNAME = '제리';
--STADIUM테이블에서 SEAT_COUNT가 30000CHRHKDLRH 41000이하인 경기장 검색
SELECT * FROM STADIUM WHERE SEAT_COUNT >= 30000 AND SEAT_COUNT <=41000;
--PLYAER테이블에서 TEAM_ID가 'K02'이거나 'K07'이고 포지션은 'MF'인 선수 검색
SELECT * FROM PLAYER WHERE (TEAM_ID = 'K02' OR TEAM_ID = 'K07') AND "POSITION" = 'MF';